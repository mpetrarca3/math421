---
title: "Assignment 9 Extra Credit"
format: html
editor: visual
---

# **How effective the Covid vaccines?**

***How to do it?***:

-   Open the Rmarkdown file of this assignment ([link](https://bryantstats.github.io/math421/assignments/fa2021_assignment9_extra_credits.Rmd)) in Rstudio.

-   Right under each **question**, insert a code chunk (you can use the hotkey `Ctrl + Alt + I` to add a code chunk) and code the solution for the question.

-   `Knit` the rmarkdown file (hotkey: `Ctrl + Alt + K`) to export an html.

-   Publish the html file to your Githiub Page.

***Submission***: Submit the link on Github of the assignment to Canvas

How effective is the covid vaccines? There are multiple analysis to answer the question. This following practice give ONE way to analyze how effective the Covid vaccines are. The analysis is done for the United States.

1.  Import the two following data

-   Data 1: <https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv>

-   Data 2: <https://covid19.who.int/who-data/vaccination-data.csv>

```{r}
#Importing libraries and saving the data to two dataframes.

library(tidyverse)
library(dplyr)
library(gganimate)
library(gifski)
library(ggplot2)
library(knitr)
library(ggthemes)

df1 <- read_csv("https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/vaccinations/vaccinations.csv")

df2 <- read_csv("https://covid19.who.int/who-data/vaccination-data.csv")

head(df1)

```

```{r}
#Viewing the dataframe.

head(df2)
```

2.  We will merge these two datasets in one for our analysis. We will use the `inner_join()` function to join the two datasets into one new datasets where the primary keys are Country and Date. First we need to change the names of the two datasets so that they have the same name for country and date. In dataset 1, change the name of the `location` to `Country`. In dataset 2, change the name of the variable `Date_reported` to `date`

```{r}
#Creating a column for country thats equal to location and then removing the duplicate location column. This process was repeated for the date column in dataset 2. I'm sure there's many other ways of doing this such as using the rename function, but this was the first method that came to mind.

df1 <- df1 %>% 
  mutate(COUNTRY = location) %>% 
  select(-location)

df2 <- df2 %>% 
  mutate(date = DATE_UPDATED) %>% 
  select(-DATE_UPDATED)

df <- inner_join(df1,df2)
head(df)
```

```{r}
#Viewing the variable names in the new dataframe.

names(df)
```

3.  In dataset 2 and variable `Country` change `United States of America` to `United States` (You can use `str_replace`)

```{r}
#Changing the name of the category 'United States of America' to 'United States' to match the name in the other dataframe. The changes are saved to the column in the dataframe.

df2$COUNTRY <- df2$COUNTRY %>%
  str_replace("United States of America","United States")

#Viewing the categories within the new country column.

names(table(df2$COUNTRY))
  
```

4.  Use `inner_join(data1, data2, by = c('Country','date')` to create a new dataset.

    ```{r}
    #Using inner join to merge the two dataframes on  `COUNTRY` and `date`. This action is then saved to a dataset.

    df <- inner_join(df1,df2, by = c('COUNTRY','date'))
    head(df)
    ```

For more about joining data, see this datacamp course: <https://app.datacamp.com/learn/courses/joining-data-with-dplyr-in-r>
