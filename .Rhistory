df1 <- df %>% mutate(~replace(.SEX, . == 'Not Rep', NA)) %>%
mutate(~replace(.SEX, . == 'Unknown', NA))
#Using
df1 <- df %>% mutate(~replace(SEX, . == 'Not Rep', NA)) %>%
mutate(~replace(SEX, . == 'Unknown', NA))
#Using
df$SEX <- df$SEX %>% mutate(~replace(SEX, . == 'Not Rep', NA)) %>%
mutate(~replace(SEX, . == 'Unknown', NA))
#Using
df1 <- df %>% mutate(~replace(., . == 'Not Rep', NA)) %>%
mutate_all(~replace(., . == 'Unknown', NA))
#Using
df1 <- df %>% mutate(~replace(., . == 'Not Rep', NA)) %>%
mutate_all(~replace(., . == 'Unknown', NA))
#Using
df1 <- df %>% mutate_all(~replace(., . == 'Not Rep', NA)) %>%
mutate_all(~replace(., . == 'Unknown', NA))
table(df1$SEX)
#Using
df$SEX <- df$SEX %>% mutate_all(~replace(., . == 'Not Rep', NA)) %>%
mutate_all(~replace(., . == 'Unknown', NA))
#Using
df$SEX <- df$SEX %>% mutate_all(~replace(., . == 'Not Rep', NA)) %>% mutate_all(~replace(., . == 'Unknown', NA))
#Using
df$SEX <- df$SEX %>% mutate(~replace(., . == 'Not Rep', NA)) %>% mutate(~replace(., . == 'Unknown', NA))
#Using
df$SEX <- df$SEX %>% na_if('Unknown') %>%
na_if('Not Rep')
table(df$SEX)
#Since the majority of participants were male, the number of male participants increased after this change while the number of female participants remained the same.
majority_sex = names(which.max(table(df$SEX)))
df$SEX %>% replace_na(majority_sex)
table(df$SEX)
#Since the majority of participants were male, the number of male participants increased after this change while the number of female participants remained the same.
majority_sex = names(which.max(table(df$SEX)))
df$SEX %>% replace_na(majority_sex)
table(df$SEX)
#Since the majority of participants were male, the number of male participants increased after this change while the number of female participants remained the same.
majority_sex = names(which.max(table(df$SEX)))
df$SEX <- df$SEX %>% replace_na(majority_sex)
table(df$SEX)
sum(is.na(df$SEX))
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
df <- read_csv('tornados.csv')
head(df)
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('tornados.csv')
head(df)
df
head(df)
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('tornados.csv')
head(df)
df %>% ggplot()+
geom_density(mapping = aes(x = date, color=fat))
df %>% ggplot()+
geom_density(mapping = aes(x = mag, color=fat))
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('CARS_1.csv')
head(df)
df
geom_density(mapping = aes(x = rating, color=body_type)
df %>% ggplot()+
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('CARS_1.csv')
df %>% ggplot()+
geom_density(mapping = aes(x = rating, color=body_type)
df %>% ggplot()+
geom_density(mapping = aes(x = rating, color=body_type))
df
df %>% ggplot()+
geom_density(mapping = aes(x = rating, color=fuel_type))
df %>% ggplot()+
geom_density(mapping = aes(color=fuel_type))
df %>% ggplot()+
geom_density(mapping = aes(x = rating, color=fuel_type))
df %>% ggplot()+
geom_density(mapping = aes(x = rating, color=body_type))
df %>% ggplot()+
geom_density(mapping = aes(x = rating))
df %>% ggplot()+
geom_histogram(mapping = aes(x = rating))
df %>% ggplot()+
geom_density(mapping = aes(x = ending_price))
df %>% ggplot()+
geom_density(mapping = aes(x = max_power_rp))
df %>% ggplot()+
geom_density(mapping = aes(x = max_power_bhp))
df %>% ggplot()+
geom_histogram(mapping = aes(x = max_power_bhp))
df %>% ggplot()+
geom_boxplot(mapping = aes(x = max_power_bhp))
df %>% ggplot()+
geom_bar(mapping = aes(x = max_power_bhp))
df %>% ggplot()+
geom_bar(mapping = aes(x = max_power_bh))
df %>% ggplot()+
geom_bar(mapping = aes(x = max_power_bhp))
df %>% ggplot()+
geom_bar(mapping = aes(x = transmission_type))
df %>% ggplot()+geom_point(aes(x=rating, y=ending_price))
df %>% ggplot()+geom_point(aes(x=reviews_count, y=ending_price))
df %>% ggplot()+
geom_histogram(mapping = aes(x = max_power_bhp))
#https://www.kaggle.com/datasets/tr1gg3rtrash/cars-2022-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('cars.csv')
df
df <- read_csv('Chicago_Crimes.csv')
#https://www.kaggle.com/datasets/tr1gg3rtrash/cars-2022-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('Chicago_Crimes.csv')
df
#https://www.kaggle.com/datasets/taeefnajib/used-car-price-prediction-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('used_cars.csv')
df
#https://www.kaggle.com/datasets/taeefnajib/used-car-price-prediction-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('used_cars.csv')
df
```
knitr::opts_chunk$set(message = FALSE)
#https://www.kaggle.com/datasets/taeefnajib/used-car-price-prediction-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('used_cars.csv')
df
```
#https://www.kaggle.com/datasets/taeefnajib/used-car-price-prediction-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('used_cars.csv')
df
```
#https://www.kaggle.com/datasets/taeefnajib/used-car-price-prediction-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('used_cars.csv')
df
```
#https://www.kaggle.com/datasets/taeefnajib/used-car-price-prediction-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('used_cars.csv')
df
```
#The density plot for the Maximum horsepower of a car. The highest density is ~0.00275 at a maximum horse power of 125. There is a relative maxima in the graph at a maximum horsepower of approximately 580. This is due to
df %>% ggplot()+
geom_density(mapping = aes(x = max_power_bhp))
#https://www.kaggle.com/datasets/taeefnajib/used-car-price-prediction-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('used_cars.csv')
df
#The density plot for the Maximum horsepower of a car. The highest density is ~0.00275 at a maximum horse power of 125. There is a relative maxima in the graph at a maximum horsepower of approximately 580. This is due to
df %>% ggplot()+
geom_density(mapping = aes(x = max_power_bhp))
#Before any graphs can be made, there are some issues with the data that must be resolved. All variables with the exception on 'model_year' have the class of character. There are multiple variables in the dataset that have the class character, but they are numeric in nature. The variables that will be changed to numeric are 'milage', 'accident', and 'price.'
df$milage %>% str_remove('mi.')
#Before any graphs can be made, there are some issues with the data that must be resolved. All variables with the exception on 'model_year' have the class of character. There are multiple variables in the dataset that have the class character, but they are numeric in nature. The variables that will be changed to numeric are 'milage', 'accident', and 'price.'
df$milage %>% str_remove('mi.')
df %>% mutate(milage = as.numeric(milage,na.rm = TRUE))
class(df$milage)
#Before any graphs can be made, there are some issues with the data that must be resolved. All variables with the exception on 'model_year' have the class of character. There are multiple variables in the dataset that have the class character, but they are numeric in nature. The variables that will be changed to numeric are 'milage', 'accident', and 'price.'
df$milage %>% str_remove('mi.',',')
#Before any graphs can be made, there are some issues with the data that must be resolved. All variables with the exception on 'model_year' have the class of character. There are multiple variables in the dataset that have the class character, but they are numeric in nature. The variables that will be changed to numeric are 'milage', 'accident', and 'price.'
df$milage %>% str_remove('mi.') %>% str_remove(',')
df %>% mutate(milage = as.numeric(milage,na.rm = TRUE))
class(df$milage)
#Before any graphs can be made, there are some issues with the data that must be resolved. All variables with the exception on 'model_year' have the class of character. There are multiple variables in the dataset that have the class character, but they are numeric in nature. The variables that will be changed to numeric are 'milage', 'accident', and 'price.'
df$milage %>% str_remove(' mi.') %>% str_remove(',')
df %>% mutate(milage = as.numeric(milage,na.rm = TRUE))
class(df$milage)
class(df$milage)
df %>% mutate(milage = as.numeric(milage,na.rm = TRUE))
#Before any graphs can be made, there are some issues with the data that must be resolved. All variables with the exception on 'model_year' have the class of character. There are multiple variables in the dataset that have the class character, but they are numeric in nature. The variables that will be changed to numeric are 'milage', 'accident', and 'price.'
df$milage <- df$milage %>% str_remove(' mi.') %>% str_remove(',')
df %>% mutate(milage = as.numeric(milage,na.rm = TRUE))
class(df$milage)
class(df$milage)
#Before any graphs can be made, there are some issues with the data that must be resolved. All variables with the exception on 'model_year' have the class of character. There are multiple variables in the dataset that have the class character, but they are numeric in nature. The variables that will be changed to numeric are 'milage', 'accident', and 'price.'
df$milage <- df$milage %>% str_remove(' mi.') %>% str_remove(',')
df %>% mutate(milage = as.numeric(milage,na.rm = TRUE))
class(df$milage)
class(df$milage)
#Before any graphs can be made, there are some issues with the data that must be resolved. All variables with the exception on 'model_year' have the class of character. There are multiple variables in the dataset that have the class character, but they are numeric in nature. The variables that will be changed to numeric are 'milage', 'accident', and 'price.'
df$milage <- df$milage %>% str_remove(' mi.') %>% str_remove(',')
df <- df %>% mutate(milage = as.numeric(milage,na.rm = TRUE))
class(df$milage)
df$price <- df$price %>% str_remove('$') %>% str_remove(',')
df <- df %>% mutate(price = as.numeric(price, na.rm = TRUE))
class(df$price)
df$price <- df$price %>% str_remove('$') %>% str_remove(',')
df <- df %>% mutate(price = as.numeric(price, na.rm = TRUE))
class(df$price)
table(df$accident)
knitr::opts_chunk$set(message = FALSE)
#https://www.kaggle.com/datasets/taeefnajib/used-car-price-prediction-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('used_cars.csv')
df
#Before any graphs can be made, there are some issues with the data that must be resolved. All variables with the exception on 'model_year' have the class of character. There are multiple variables in the dataset that have the class character, but they are numeric in nature. The variables that will be changed to numeric are 'milage', 'accident', and 'price.'
df$milage <- df$milage %>% str_remove(' mi.') %>% str_remove(',')
df <- df %>% mutate(milage = as.numeric(milage, na.rm = TRUE))
class(df$milage)
df$price <- df$price %>% str_remove('$') %>% str_remove(',')
df <- df %>% mutate(price = as.numeric(price, na.rm = TRUE))
class(df$price)
df$accident %>% ifelse(accident == 'None reported')
#The density plot for the Maximum horsepower of a car. The highest density is ~0.00275 at a maximum horse power of 125. There is a relative maxima in the graph at a maximum horsepower of approximately 580. This is due to
df %>% ggplot()+
geom_density(mapping = aes(x = max_power_bhp))
df$accident %>% ifelse(accident == 'None reported',0,1)
df$accident %>% ifelse(.,accident == 'None reported',0,1)
df$accident %>% ifelse(.,accident == 'None reported',0,1)
df$accident %>% ifelse(accident == 'None reported',0,1)
df$accident %>% ifelse(df$accident == 'None reported',0,1)
ifelse(df$accident == 'None reported',0,1)
colsums(is.na(df))
colSums(is.na(df))
ifelse(df$accident == 'None reported',0,1)
df$accident <- ifelse(df$accident == 'None reported',0,1)
df$accident <- ifelse(df$accident == 'None reported','0','1')
df <- df %>% mutate(accident = as.numeric(accident, na.rm = TRUE))
class(df$accident)
df$price <- df$price %>% str_remove('$') %>% str_remove(',')
df <- df %>% mutate(price = as.numeric(price, na.rm = TRUE))
class(df$price)
#Before any graphs can be made, there are some issues with the data that must be resolved. All variables with the exception on 'model_year' have the class of character. There are multiple variables in the dataset that have the class character, but they are numeric in nature. The variables that will be changed to numeric are 'milage', 'accident', and 'price.'
df$milage <- df$milage %>% str_remove(' mi.') %>% str_remove(',')
df <- df %>% mutate(milage = as.numeric(milage, na.rm = TRUE))
class(df$milage)
drop_na(df)
colSums(is.na(df))
df
table(df$accident)
df$accident <- ifelse(df$accident == 'None reported','1','0')
df <- df %>% mutate(accident = as.numeric(accident, na.rm = TRUE))
class(df$accident)
table(df$accident)
df$accident <- ifelse(df$accident == 'None reported','0','1')
df <- df %>% mutate(accident = as.numeric(accident, na.rm = TRUE))
class(df$accident)
table(df$accident)
knitr::opts_chunk$set(message = FALSE)
#https://www.kaggle.com/datasets/taeefnajib/used-car-price-prediction-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('used_cars.csv')
df
#Before any graphs can be made, there are some issues with the data that must be resolved. All variables with the exception on 'model_year' have the class of character. There are multiple variables in the dataset that have the class character, but they are numeric in nature. The variables that will be changed to numeric are 'milage', 'accident', and 'price.'
df$milage <- df$milage %>% str_remove(' mi.') %>% str_remove(',')
df <- df %>% mutate(milage = as.numeric(milage, na.rm = TRUE))
class(df$milage)
df$price <- df$price %>% str_remove('$') %>% str_remove(',')
df <- df %>% mutate(price = as.numeric(price, na.rm = TRUE))
class(df$price)
df$accident <- ifelse(df$accident == 'None reported','0','1')
df <- df %>% mutate(accident = as.numeric(accident, na.rm = TRUE))
class(df$accident)
table(df$accident)
df
#The density plot for the Maximum horsepower of a car. The highest density is ~0.00275 at a maximum horse power of 125. There is a relative maxima in the graph at a maximum horsepower of approximately 580. This is due to
df %>% ggplot()+
geom_density(mapping = aes(x = max_power_bhp))
df
df
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(message = FALSE)
#https://www.kaggle.com/datasets/taeefnajib/used-car-price-prediction-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('used_cars.csv')
df
#Before any graphs can be made, there are some issues with the data that must be resolved. All variables with the exception on 'model_year' have the class of character. There are multiple variables in the dataset that have the class character, but they are numeric in nature. The variables that will be changed to numeric are 'milage', 'accident', and 'price.'
df$milage <- df$milage %>% str_remove(' mi.') %>% str_remove(',')
df <- df %>% mutate(milage = as.numeric(milage, na.rm = TRUE))
class(df$milage)
df$price <- df$price %>% str_remove('$') %>% str_remove(',')
df
df$price <- df$price %>% str_remove('$') %>% str_remove(',')
df
df$price <- df$price %>% str_remove('	$') %>% str_remove(',')
df
df$price <- df$price %>% str_remove('$') %>% str_remove(',')
df
df$price <- df$price %>% str_remove('$ ') %>% str_remove(',')
df
df$price <- df$price %>% str_replace('$','') %>% str_remove(',')
df
df$price <- df$price %>% str_remove('	$10300') %>% str_remove(',')
df
df$price <- df$price %>% str_remove('$10300') %>% str_remove(',')
df
df$price <- df$price %>% str_remove($)
df$price <- df$price %>% str_remove('$')
df$price <- df$price %>% str_remove('$')
df$price
df$price <- df$price %>% str_replace_all('$',"[^[:alnum:]]", "")
df$price <- df$price %>% str_replace_all('$',"[^[:alnum:]]",)
df$price <- df$price %>% str_replace_all('$',"[^[:alnum:]]")
df$price
df$price <- df$price %>% str_replace_all('$',[^[:alnum:]])
df$price <- df$price %>% str_remove(',') %>% str_remove('$')
df <- df %>% mutate(price = as.numeric(price, na.rm = TRUE))
#https://www.kaggle.com/datasets/mohidabdulrehman/ultimate-car-price-prediction-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('cars.csv')
df
#The density plot for the
df %>% ggplot()+
geom_density(mapping = aes(x = milage))
#The density plot for the
df %>% ggplot()+
geom_density(mapping = aes(x = Mileage))
#The density plot for the variable 'Mileage' demonstrates that there is a high concentration of cars with 60,000-100,000 miles in the secondary market. There are practically 0 cars in the market with a mileage of over 300,000 miles.
df %>% ggplot()+
geom_density(mapping = aes(x = Mileage))
df %>% ggplot()+
geom_histogram(mapping = aes(x = Price))
df %>% ggplot()+
geom_histogram(mapping = aes(y = Price))
df %>% ggplot()+
geom_histogram(mapping = aes(x = Price))
#The density plot for the variable 'Mileage' demonstrates that there is a high concentration of cars with 60,000-100,000 miles in the secondary market. There are practically 0 cars in the market with a mileage of over 300,000 miles.
df %>% ggplot()+
geom_density(mapping = aes(x = `Engine Capacity`))
#The density plot for the variable 'Mileage' demonstrates that there is a high concentration of cars with 60,000-100,000 miles in the secondary market. There are practically 0 cars in the market with a mileage of over 300,000 miles.
df %>% ggplot()+
geom_density(mapping = aes(x = Mileage))
df %>% ggplot()+
geom_histogram(mapping = aes(x = `Engine Capacity`))
df %>% ggplot()+
geom_boxplot(mapping = aes(x = Price)
df %>% ggplot()+
geom_boxplot(mapping = aes(x = Price))
df %>% ggplot()+
geom_boxplot(mapping = aes(x = Model Year))
df %>% ggplot()+
geom_boxplot(mapping = aes(x = `Model Year`))
df %>% ggplot()+
geom_bar(mapping=aes(x=`Transmission Type`))
names(df)
df %>% ggplot()+geom_point(aes(x=`Model Year`, y=Price))
df %>% ggplot()+geom_line(aes(x=Mileage, y=`Engine Capacity`))
df %>% ggplot()+geom_line(aes(x=`Engine Capacity`, y=Mileage))
df %>% ggplot()+geom_line(aes(x=`Engine Capacity`, y=`Model Year`))
df %>% ggplot()+geom_line(aes(x=`Model Year`, y=`Engine Capacity`))
df %>% ggplot()+geom_smooth(aes(x=Age, y=Fare))
df %>% ggplot()+geom_smooth(aes(x=`Model Year`, y=`Price`))
df %>% ggplot()+geom_line(aes(x=`Model Year`, y=`Price`))
table(df$Color)
df %>% ggplot()+
geom_density(mapping = aes(x = price, color = color))
df %>% ggplot()+
geom_density(mapping = aes(x = price, color = Color))
df %>% ggplot()+
geom_density(mapping = aes(x = Price, color = Color))
df %>% ggplot()+
geom_density(mapping = aes(x = `Mileage`, color = `Transmission Type`))
df %>% ggplot()+
geom_boxplot(mapping = aes(x = Mileage, y = `Transmission Type`))
names(df)
df %>% ggplot()+
geom_bar(mapping=aes(x=Color, fill=`Transmission Type`), position = 'fill')
df %>% ggplot()+
geom_bar(mapping=aes(x= `Transmission Type`, fill= Color), position = 'fill')
ble(df$`Body Type`)
table(df$`Body Type`)
df %>% ggplot()+
geom_bar(mapping=aes(x= `Transmission Type`, fill= `Body Type`), position = 'fill')
ggplot(data, aes(x = `Model Year`, y = `Body Type`, size = Price)) +
geom_point(alpha = 0.7) +
scale_size_area()
ggplot(df, aes(x = `Model Year`, y = `Body Type`, size = Price)) +
geom_point(alpha = 0.7) +
scale_size_area()
ggplot(df, aes(x = `Model Year`, y = `Engine Capacity`, size = Price)) +
geom_point(alpha = 0.7) +
scale_size_area()
#From the graph
df %>% ggplot()+
geom_histogram(mapping = aes(x = `Mileage`))
df %>% ggplot()+
geom_boxplot(mapping = aes(x = Mileage))
#From the graph
df %>% ggplot()+
geom_histogram(mapping = aes(x = Mileage))
df %>% ggplot()+
geom_boxplot(mapping = aes(x = Mileage))
df %>% ggplot()+
geom_bar(mapping=aes(x=`Transmission Type`))
cor(df$`Model Year`,df$Price)
#The upward trend in the scatter plot for the variables `Model Year` and `Price` indicates that these variables are correlated. More specifically, there is a positive correlation between `Model Year` and `Price`.
df %>% ggplot()+geom_point(aes(x=`Mileage`, y=Price))
#The upward trend in the scatter plot for the variables `Model Year` and `Price` indicates that these variables are correlated. More specifically, there is a positive correlation between `Model Year` and `Price`.
df %>% ggplot()+geom_point(aes(x= Mileage, y=Price))
df %>% ggplot()+geom_line(aes(x=`Mileage`, y=`Price`))
df %>% ggplot()+geom_smooth(aes(x=`Mileage`, y=`Price`))
which.max(df$Mileage)
max(mileage, na.rm = TRUE)
max(df$Mileage, na.rm = TRUE)
#The upward trend in the scatter plot for the variables `Mileage` and `Price` indicates that these variables are correlated. More specifically, there is a negative correlation between `Mileage` and `Price`. As the miles increase, the points become less dense. However, there are some outliers with 999,999 miles.
max(df$Mileage)
df %>% ggplot()+geom_point(aes(x= Mileage, y=Price))
#The upward trend in the scatter plot for the variables `Mileage` and `Price` indicates that these variables are correlated. More specifically, there is a negative correlation between `Mileage` and `Price`. As the miles increase, the points become less dense. However, there are some outliers with 999,999 miles.
max(df$Mileage)
df %>% ggplot()+geom_point(aes(x= Mileage, y=Price))
knitr::opts_chunk$set(message = FALSE)
#The upward trend in the scatter plot for the variables `Mileage` and `Price` indicates that these variables are correlated. More specifically, there is a negative correlation between `Mileage` and `Price`. As the miles increase, the points become less dense. However, there are some outliers with 999,999 miles.
max(df$Mileage)
df %>% ggplot()+geom_point(aes(x= Mileage, y=Price))
knitr::opts_chunk$set(message = FALSE)
#https://www.kaggle.com/datasets/mohidabdulrehman/ultimate-car-price-prediction-dataset
library(tidyverse)
library(dplyr)
library(ggplot2)
df <- read_csv('cars.csv')
df
#The density plot for the variable 'Mileage' demonstrates that there is a high concentration of cars with 60,000-100,000 miles in the secondary market. There are practically 0 cars in the market with a mileage of over 300,000 miles.
df %>% ggplot()+
geom_density(mapping = aes(x = Mileage))
#The histogram of the variable `Mileage` reinforces the pattern observed from the density plot. There is a higher frequency of cars on the secondary market with a mileage between 60,000 and 100,000 miles. There are no cars on the market after 500,000 miles.
df %>% ggplot()+
geom_histogram(mapping = aes(x = Mileage))
#The boxplot for the variable `Mileage` indicates the average mileage for a car on the used car market is approximately 80,000 miles (from the vertical line). From the width of the white box, the interquartile range is approximately 60,000 to 120,000 miles. Most of the outliers exceed 120,000 miles.
df %>% ggplot()+
geom_boxplot(mapping = aes(x = Mileage))
#The barplot indicates that there are roughly 3,000 more manual vehicles in the dataset compared to automatic.
df %>% ggplot()+
geom_bar(mapping=aes(x=`Transmission Type`))
#The upward trend in the scatter plot for the variables `Mileage` and `Price` indicates that these variables are correlated. More specifically, there is a negative correlation between `Mileage` and `Price`. As the miles increase, the points become less dense. However, there are some outliers with 999,999 miles.
max(df$Mileage)
df %>% ggplot()+geom_point(aes(x= Mileage, y=Price))
df %>% ggplot()+geom_line(aes(x=`Mileage`, y=`Price`))
df %>% ggplot()+geom_smooth(aes(x=`Mileage`, y=`Price`))
df %>% ggplot()+
geom_density(mapping = aes(x = `Mileage`, color = `Transmission Type`))
df %>% ggplot()+
geom_boxplot(mapping = aes(x = Mileage, y = `Transmission Type`))
df %>% ggplot()+
geom_bar(mapping=aes(x= `Transmission Type`, fill= `Body Type`), position = 'fill')
ggplot(df, aes(x = `Model Year`, y = `Engine Capacity`, size = Price)) +
geom_point(alpha = 0.7) +
scale_size_area()
cor(df$`Model Year`,df$Price,df$`Engine Capacity`)
#This final plot comprised of the variables `Model Year`, `Engine Capacity`, and `Price` indicates that all three variables are positively correlated. The strongest correlation exists between `Model Year` and `Price` since the size of the bubbles are much greater on the right side of the graph. However, there is still a correlation between between `Engine Capacity` and `Price` since the largest bubbles are in the top right of the graph
cor(df$`Model Year`,df$Price`)
ggplot(df, aes(x = `Model Year`, y = `Engine Capacity`, size = Price)) +
#This final plot comprised of the variables `Model Year`, `Engine Capacity`, and `Price` indicates that all three variables are positively correlated. The strongest correlation exists between `Model Year` and `Price` since the size of the bubbles are much greater on the right side of the graph. However, there is still a correlation between between `Engine Capacity` and `Price` since the largest bubbles are in the top right of the graph
ggplot(df, aes(x = `Model Year`, y = `Engine Capacity`, size = Price)) +
geom_point(alpha = 0.7) +
scale_size_area()
#This final plot comprised of the variables `Model Year`, `Engine Capacity`, and `Price` indicates that all three variables are positively correlated. The strongest correlation exists between `Model Year` and `Price` since the size of the bubbles are much greater on the right side of the graph. However, there is still a correlation between between `Engine Capacity` and `Price` since the largest bubbles are in the top right of the graph
cor(df$`Model Year`,df$Price)
cor(df$`Model Year`,df$`Engine Capacity`)
cor(df$Price,df$`Engine Capacity`)
ggplot(df, aes(x = `Model Year`, y = `Engine Capacity`, size = Price)) +
geom_point(alpha = 0.7) +
scale_size_area()
#This final plot comprised of the variables `Model Year`, `Engine Capacity`, and `Price` indicates that all three variables are positively correlated. The strongest correlation exists between `Model Year` and `Price` since the size of the bubbles are much greater on the right side of the graph. However, there is still a correlation between between `Engine Capacity` and `Price` since the largest bubbles are in the top right of the graph
cor(df$`Model Year`,df$Price)
cor(df$`Model Year`,df$`Engine Capacity`)
cor(df$Price,df$`Engine Capacity`)
ggplot(df, aes(x = `Model Year`, y = `Engine Capacity`, size = Price)) +
geom_point(alpha = 0.7) +
scale_size_area()
#The smooth plot demonstrates that when the mileage exceeds 250,000 miles, the price converges to $10,000. This is likely due to sellers not pricing their car below $10,000. The smooth plot also estimates that the average price of a new car is $35,000. This was done using the variables `Mileage` and `Price` from used car data. There are less observations with a mileage exceeding 250,000 miles, so there is more uncertainty with predicting the price for a car with high mileage.
df %>% ggplot()+geom_smooth(aes(x=`Mileage`, y=`Price`))
```
#The smooth plot demonstrates that when the mileage exceeds 250,000 miles, the price converges to $10,000. This is likely due to sellers not pricing their car below $10,000. The smooth plot also estimates that the average price of a new car is $35,000. This was done using the variables `Mileage` and `Price` from used car data. There are less observations with a mileage exceeding 250,000 miles, so there is more uncertainty with predicting the price for a car with high mileage.
df %>% ggplot()+geom_smooth(aes(x=`Mileage`, y=`Price`))
```
#The smooth plot demonstrates that when the mileage exceeds 250,000 miles, the price converges to $10,000. This is likely due to sellers not pricing their car below $10,000. The smooth plot also estimates that the average price of a new car is $35,000. This was done using the variables `Mileage` and `Price` from used car data. There are less observations with a mileage exceeding 250,000 miles, so there is more uncertainty with predicting the price for a car with high mileage.
df %>% ggplot()+geom_smooth(aes(x=`Mileage`, y=`Price`))
#This final plot comprised of the variables `Model Year`, `Engine Capacity`, and `Price` indicates that there are two pairs of variables that are positively correlated. The strongest correlation exists between `Engine Capacity` and `Price` since the size of the bubbles are much greater at the top of the graph. However, there is still a correlation between between `Price` and `Model Year` since the largest bubbles are on the right side of the graph. Interestingly, the `Engine Capacity` has remained about the same since 1990. There appears to be little to no correlation between 'Model Year` and `Engine Capacity`.
cor(df$`Model Year`,df$Price)
cor(df$`Model Year`,df$`Engine Capacity`)
cor(df$Price,df$`Engine Capacity`)
ggplot(df, aes(x = `Model Year`, y = `Engine Capacity`, size = Price)) +
geom_point(alpha = 0.7) +
scale_size_area()
