df %>%
filter(Released_Year == '2014') %>%
summarise(total_revenue = sum(Gross,na.rm=TRUE))
df %>%
summarise(avg_revenue = mean(Gross,na.rm=TRUE))
df %>%
group_by(Released_Year) %>%
summarise(avg_votes = mean(No_of_Votes,na.rm=TRUE))
df %>%
filter(IMDB_Rating>9) %>%
summarise(avg_votes = mean(No_of_Votes,na.rm=TRUE))
df2020 <- df %>% filter(Released_Year == '2020')
summary(df2020$No_of_Votes)
df2020 %>%
filter(No_of_Votes >= 84127 & No_of_Votes < 106083) %>%
summarise(avg_meta_score = mean(Meta_score,na.rm=TRUE))
#There is only one movie from 2020 that falls within the range of votes.
#Hence, the average Meta score only represents one movie.
df2020
df$Runtime <- df$Runtime %>%
str_remove('min')
df <- df %>%
mutate(Runtime = as.numeric(Runtime), na.rm = TRUE)
df
df$Runtime <- df$Runtime %>%
str_remove('min')
df <- df %>%
mutate(Runtime = as.numeric(Runtime,na.rm = TRUE))
df
df <- df %>%
select(-na.rm)
df$Runtime <- df$Runtime %>%
str_remove('min')
df <- df %>%
mutate(Runtime = as.numeric(Runtime,na.rm = TRUE))
df
df <- df %>%
select(-na.rm)
df$Runtime <- df$Runtime %>%
str_remove('min')
df <- df %>%
mutate(Runtime = as.numeric(Runtime,na.rm = TRUE))
df
df$Runtime <- df$Runtime %>%
str_remove('min')
df <- df %>%
mutate(Runtime = as.numeric(Runtime,na.rm = TRUE))
df
df$Runtime <- df$Runtime %>%
str_remove('min')
df <- df %>%
mutate(Runtime = as.numeric(Runtime,na.rm = TRUE))
head(df)
df %>%
filter(Released_Year >=2010 & Released_Year <=2019) %>%
summarise(avg_run_time_2010s = mean(Runtime))
df %>%
filter(Released_Year >=2010 & Released_Year <=2019) %>%
summarise(avg_run_time_2010s = mean(Runtime))
mean(df$Runtime)
df %>%
filter(Released_Year >=2010 & Released_Year <=2019) %>%
summarise(avg_run_time_2010s = mean(Runtime))
df %>%
filter(Released_Year >=2010 & Released_Year <=2019) %>%
summarise(avg_run_time_2010s = mean(Runtime, na.rm = TRUE))
df %>%
cor(Runtime,IMDB_Rating, use = 'complete.obs')
df %>%
cor(IMDB_Rating,Runtime, use = 'complete.obs')
df %>%
cor(IMDB_Rating,Runtime)
df %>%
cor(IMDB_Rating,Runtime, use = "complete.obs")
df %>%
cor('IMDB_Rating','Runtime', use = "complete.obs")
df %>%
cor(IMDB_Rating,Runtime, use = "complete.obs")
df %>%
cor(Runtime, use = "complete.obs")
df %>%
cor(IMDB_Rating, use = "complete.obs")
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
df <- read_csv('imdb_top_1000.csv')
names(df)
df %>%
group_by(Series_Title) %>%
summarise(Gross) %>%
arrange(-Gross) %>%
head()
df %>%
group_by(Series_Title) %>%
summarise(IMDB_Rating) %>%
arrange(IMDB_Rating) %>%
head()
df %>%
group_by(Released_Year) %>%
count(Released_Year) %>%
arrange(-n)
df %>%
filter(Released_Year == '2014') %>%
summarise(total_revenue = sum(Gross,na.rm=TRUE))
df %>%
summarise(avg_revenue = mean(Gross,na.rm=TRUE))
df %>%
group_by(Released_Year) %>%
summarise(avg_votes = mean(No_of_Votes,na.rm=TRUE))
df %>%
filter(IMDB_Rating>9) %>%
summarise(avg_votes = mean(No_of_Votes,na.rm=TRUE))
df2020 <- df %>% filter(Released_Year == '2020')
summary(df2020$No_of_Votes)
df2020 %>%
filter(No_of_Votes >= 84127 & No_of_Votes < 106083) %>%
summarise(avg_meta_score = mean(Meta_score,na.rm=TRUE))
#There is only one movie from 2020 that falls within the range of votes.
#Hence, the average Meta score only represents one movie.
df2020
df$Runtime <- df$Runtime %>%
str_remove('min')
df <- df %>%
mutate(Runtime = as.numeric(Runtime,na.rm = TRUE))
head(df)
df %>%
filter(Released_Year >=2010 & Released_Year <=2019) %>%
summarise(avg_run_time_2010s = mean(Runtime, na.rm = TRUE))
df %>%
cor(IMDB_Rating, use = "complete.obs")
cor(df$Runtime)
cor(df$Runtime, df$IMDB_Rating, use = "complete.obs")
# Select only character columns
df %>% select_if(is.character)
# Calculate the median of all numeric columns
df %>% summarise_if(is.numeric, mean, na.rm=TRUE)
# Select only character columns
df %>% select_if(is.character)
# Calculate the median of all numeric columns
df %>% summarise_if(is.numeric, mean, na.rm=TRUE)
knitr::opts_chunk$set(message = FALSE)
df2 <- df1 %>% na.rm(df1)
knitr::opts_chunk$set(message = FALSE)
install.packages('tidyr')
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/adult_census_missing.csv')
head(df)
colSums(is.na(df))
sum(is.na(df))
install.packages('VIM')
library('VIM')
aggr(df)
names(df)
#There are no suspicious categories within the variable 'age'.
table(df$age)
#There are suspicious categories in the variable 'workclass'. There categories include
#'?', 'Not known', and 'Unknown'.
table(df$workclass)
#There are no suspicious categories within the variable 'fnlwgt'.
table(df$fnlwgt)
#There are suspicious categories in the variable education. These categories are
#'Not Known' and 'Unknown'
table(df$education)
#There are no suspicious categories within the variable 'education.num'.
table(df$education.num)
#There is one suspicious category within the variable 'marital.status'. This category
#is titled 'Unknown'.
table(df$marital.status)
#There are 3 suspicious categories within the variable 'occupation.'
#These categories include '?','Not Known', and 'Unknown'
table(df$occupation)
#There are two suspicious category within the variable 'relationship'.
#The category is titled 'Unknown' and 'Not Known'
table(df$relationship)
#There are no suspicious categories within the variable race.
table(df$race)
#There is one suspicious category within the variable 'sex'.
#The category is titled 'Unknown'.
table(df$sex)
#There are no suspicious categories within the variable 'capital.gain'.
table(df$capital.gain)
#There are no suspicious categories within the variable 'capital.loss'.
table(df$capital.loss)
#There are no suspicious categories within the variable 'hours.per.week'.
table(df$hours.per.week)
#There are 3 suspicious categories within the variable 'native.country.'
#These categories include '?','Not Known', and 'Unknown'.
table(df$native.country)
table(df$income)
#Replacing all forms of missing values to NA within the dataframe. Since the same suspicious
#categories have appeared in multiple variables, it is most efficient to us mutate_all.
df1 <- df %>% mutate_all(~replace(., . == 'Not Known', NA)) %>%
mutate_all(~replace(., . == '?', NA)) %>%
mutate_all(~replace(., . == 'Unknown', NA))
df1
#As expected, the number of Nas by column has increased sharply after converting categories
#to NA.
colSums(is.na(df1))
aggr(df1)
df2 <- df1 %>% na.rm(df1)
df2 <- df1 %>% na.omit(df1)
df2
df1 %>% fill("up")
df1 %>% fill(df1, 'up')
fill(df1,"up")
fill(df1,up)
fill(df1, .direction = c("up"))
fill(df1, .direction = c("up", "down"))
fill(df1, .direction = c("down"))
df3 <- fill(df1, .direction = c("down"))
df3
df3 <- fill(df1,NA, .direction = c("down"))
df3 <- fill(df1, .direction = c("down"))
df3
#There are 29,865 rows left after removing the missing values by row.
df2 <- df1 %>% na.omit(df1)
df2
df3 <- fill(df1, .direction, values = c("down"))
df3 <- fill(df1,NA, .direction = c("down"))
df3 <- fill(df1, .direction = c("down", "up"))
df3 <- fill(df1, .direction, values = c("down", "up"))
df3 <- fill(df1, .direction = c("up"))
df3
df3 <- fill(df1, ..., .direction = c("down", "up", "downup", "updown"))
df3 <- fill(df1,. direction = c("down", "up", "downup", "updown"))
df3 <- fill(df1,.direction = c("down", "up", "downup", "updown"))
df3
df3 <- fill(df1,.direction = c('up'))
df3
df3 <- fill(df1$workclass,.direction = c('up'))
df3
fill(df1)
df1 %>% fill(df1$workclass)
df1 %>% fill(workclass)
df1 %>% fill(workclass, .direction = c("down"))
df1 %>% fill(workclass, .direction = c("up"))
df1
df1 %>% fill(workclass, .direction = c("up"))
#Replacing NAs with the next value.
df1 %>% fill((age, workclass) .direction = c("up"))
#Replacing NAs with the next value.
df1 %>% fill(c(age,workclass) .direction = c("up"))
#Replacing NAs with the next value.
df1 %>% fill(c('age','workclass') .direction = c("up"))
#Replacing NAs with the next value.
df1 %>% fill(.direction = c("up"))
#Replacing NAs with the next value.
df1 %>% fill(df1, .direction = c("up"))
#Replacing NAs with the next value.
df1 %>% fill(age, .direction = c("up")) %>%
fill(workclass, .direction = c("up")) %>%
fill(education, .direction = c("up")) %>%
fill(education.num, .direction = c("up")) %>%
fill(marital.status, .direction = c("up")) %>%
fill(occupation, .direction = c("up")) %>%
fill(relationship, .direction = c("up")) %>%
fill(race,.direction = c("up")) %>%
fill(sex,.direction = c("up")) %>%
fill(capital.gain,.direction = c("up")) %>%
fill(capital.loss,.direction = c("up")) %>%
fill(hours.per.week,.direction = c("up")) %>%
fill(native.country,.direction = c("up")) %>%
fill(income, .direction = c("up"))
#Replacing NAs with the next value.
df1 %>% fill(age, .direction = c("up")) %>%
fill(workclass, .direction = c("up")) %>%
fill(education, .direction = c("up")) %>%
fill(education.num, .direction = c("up")) %>%
fill(marital.status, .direction = c("up")) %>%
fill(occupation, .direction = c("up")) %>%
fill(relationship, .direction = c("up")) %>%
fill(race,.direction = c("up")) %>%
fill(sex,.direction = c("up")) %>%
fill(capital.gain,.direction = c("up")) %>%
fill(capital.loss,.direction = c("up")) %>%
fill(hours.per.week,.direction = c("up")) %>%
fill(native.country,.direction = c("up")) %>%
fill(income, .direction = c("up")) %>%
colSums(is.na(df1))
#Replacing NAs with the next value.
df3 <- df1 %>% fill(age, .direction = c("up")) %>%
fill(workclass, .direction = c("up")) %>%
fill(education, .direction = c("up")) %>%
fill(education.num, .direction = c("up")) %>%
fill(marital.status, .direction = c("up")) %>%
fill(occupation, .direction = c("up")) %>%
fill(relationship, .direction = c("up")) %>%
fill(race,.direction = c("up")) %>%
fill(sex,.direction = c("up")) %>%
fill(capital.gain,.direction = c("up")) %>%
fill(capital.loss,.direction = c("up")) %>%
fill(hours.per.week,.direction = c("up")) %>%
fill(native.country,.direction = c("up")) %>%
fill(income, .direction = c("up"))
colSums(is.na(df3))
colSums(is.na(df1))
colSums(is.na(df1))
#Replacing NAs with the next value.
df3 <- df1 %>% fill(age, .direction = c("up")) %>%
fill(workclass, .direction = c("up")) %>%
fill(education, .direction = c("up")) %>%
fill(education.num, .direction = c("up")) %>%
fill(marital.status, .direction = c("up")) %>%
fill(occupation, .direction = c("up")) %>%
fill(relationship, .direction = c("up")) %>%
fill(race,.direction = c("up")) %>%
fill(sex,.direction = c("up")) %>%
fill(capital.gain,.direction = c("up")) %>%
fill(capital.loss,.direction = c("up")) %>%
fill(hours.per.week,.direction = c("up")) %>%
fill(native.country,.direction = c("up")) %>%
fill(income, .direction = c("up"))
colSums(is.na(df3))
head(df3)
df1 %>% select_if(is.numeric())
select_if(is.numeric(df1))
df1 %>% select_if(is.numeric())
df1 %>% select_if(is.numeric(df1))
df1 %>% select_if(is.numeric))
df1 %>% select_if(is.numeric)
df1 %>% select_if(is.numeric) %>% mutate_all(~replace(., . == NA, mean()))
df1 %>% select_if(is.numeric) %>% mutate_all(~replace(., . == NA, mean)
df1 %>% select_if(is.numeric) %>%
mutate_all(~replace(., . == NA, mean))
df1 %>% select_if(is.numeric) %>% replace_na(median)
#There are 29,865 rows left after removing the missing values by row.
drop_na(df1)
knitr::opts_chunk$set(message = FALSE)
install.packages('tidyr')
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/adult_census_missing.csv')
head(df)
colSums(is.na(df))
sum(is.na(df))
install.packages('VIM')
library('VIM')
aggr(df)
names(df)
#There are no suspicious categories within the variable 'age'.
table(df$age)
#There are suspicious categories in the variable 'workclass'. There categories include
#'?', 'Not known', and 'Unknown'.
table(df$workclass)
#There are no suspicious categories within the variable 'fnlwgt'.
table(df$fnlwgt)
knitr::opts_chunk$set(message = FALSE)
install.packages('tidyr')
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/adult_census_missing.csv')
head(df)
colSums(is.na(df))
sum(is.na(df))
install.packages('VIM')
library('VIM')
aggr(df)
names(df)
#There are no suspicious categories within the variable 'age'.
table(df$age)
#There are suspicious categories in the variable 'workclass'. There categories include
#'?', 'Not known', and 'Unknown'.
table(df$workclass)
#There are no suspicious categories within the variable 'fnlwgt'.
table(df$fnlwgt)
#There are suspicious categories in the variable education. These categories are
#'Not Known' and 'Unknown'
table(df$education)
#There are no suspicious categories within the variable 'education.num'.
table(df$education.num)
#There is one suspicious category within the variable 'marital.status'. This category
#is titled 'Unknown'.
table(df$marital.status)
#There are 3 suspicious categories within the variable 'occupation.'
#These categories include '?','Not Known', and 'Unknown'
table(df$occupation)
#There are two suspicious category within the variable 'relationship'.
#The category is titled 'Unknown' and 'Not Known'
table(df$relationship)
#There are no suspicious categories within the variable race.
table(df$race)
#There is one suspicious category within the variable 'sex'.
#The category is titled 'Unknown'.
table(df$sex)
#There are no suspicious categories within the variable 'capital.gain'.
table(df$capital.gain)
#There are no suspicious categories within the variable 'capital.loss'.
table(df$capital.loss)
#There are no suspicious categories within the variable 'hours.per.week'.
table(df$hours.per.week)
#There are 3 suspicious categories within the variable 'native.country.'
#These categories include '?','Not Known', and 'Unknown'.
table(df$native.country)
table(df$income)
#Replacing all forms of missing values to NA within the dataframe. Since the same suspicious
#categories have appeared in multiple variables, it is most efficient to us mutate_all.
df1 <- df %>% mutate_all(~replace(., . == 'Not Known', NA)) %>%
mutate_all(~replace(., . == '?', NA)) %>%
mutate_all(~replace(., . == 'Unknown', NA))
df1
#As expected, the number of Nas by column has increased sharply after converting categories
#to NA.
colSums(is.na(df1))
aggr(df1)
#There are 29,865 rows left after removing the missing values by row.
drop_na(df1)
colSums(is.na(df1))
#Replacing NAs with the next value in the columns with missing values. The changes are saved to a new dataframe.
df2 <- df1 %>% fill(age, workclass, education,
marital.status, occupation,
relationship, sex, capital.gain, native.country,
.direction = c("updown"))
colSums(is.na(df2))
head(df3)
df1 %>% select_if(is.numeric) %>% replace_na(median)
head(df2)
df1 %>% select_if(is.numeric) %>% replace_na(median, na.rm = TRUE)
#In the dataframe, there are 9 variables with missing values. Of these variables
df1 %>% select_if(is.numeric)
median_age
median_age = median(df1$age,na.rm=TRUE)
median_age
median_age = median(df1$age, na.rm = TRUE)
median_capital.gain = median(df1$capital.gain, na.rm = TRUE)
median_age = median(df1$age, na.rm = TRUE)
median_capital.gain = median(df1$capital.gain, na.rm = TRUE)
df1$age <- replace_na(df1$age, median_age)
df1$capital.gain <- replace_na(df1$capital.gain, median_capital.gain)
df1
colSums(is.na(df1))
#Finding the majority category for each of the 7 categorical variables with missing values.
df1 %>% select_if(is.numeric)
#Finding the majority category for each of the 7 categorical variables with missing values.
df1 %>% select_if(is.categorical)
#Finding the majority category for each of the 7 categorical variables with missing values.
df1 %>% select_if(-is.numeric)
#Finding the majority category for each of the 7 categorical variables with missing values.
df1 %>% select_if(is.character)
table(df$workclass)
max(table(df$workclass))
which.max(table(df$workclass))
names(which.max(table(df$workclass)))
majority_native.country = names(which.max(table(df$native.country)))
majority_workclass = names(which.max(table(df$workclass)))
majority_education = names(which.max(table(df$education)))
majority_marital.status = names(which.max(table(df$marital.status)))
majority_occupation = names(which.max(table(df$occupation)))
majority_relationship = names(which.max(table(df$relationship)))
majority_sex = names(which.max(table(df$sex)))
majority_native.country = names(which.max(table(df$native.country)))
majority_workclass = names(which.max(table(df1$workclass)))
majority_education = names(which.max(table(df1$education)))
majority_marital.status = names(which.max(table(df1$marital.status)))
majority_occupation = names(which.max(table(df1$occupation)))
majority_relationship = names(which.max(table(df1$relationship)))
majority_sex = names(which.max(table(df1$sex)))
majority_native.country = names(which.max(table(df1$native.country)))
df1$workclass <- replace_na(df1$workclass, majority_workclass)
df1$education <- replace_na(df1$education, majority_education)
df1$marital.status <- replace_na(df1$marital.status, majority_marital.status)
df1$occupation <- replace_na(df1$occupation, majority_occupation)
df1$relationship <- replace_na(df1$relationship, majority_relationship)
df1$sex <- replace_na(df1$sex, majority_sex)
df1$native.country <- replace_na(df1$native.country, majority_native.country)
df1
colSums(is.na(df1))
head(table(df$fnlwgt))
#There are no suspicious categories within the variable 'fnlwgt'.
head(table(df$fnlwgt))
max(df$fnlwgt)
min(df$fnlwgt)
df
head(df)
#Checking for missing values by column.
colSums(is.na(df))
knitr::opts_chunk$set(message = FALSE)
install.packages('tidyr')
#Importing the tidyverse library and dataset with read_csv.
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/adult_census_missing.csv')
head(df)
#Checking for missing values by column.
colSums(is.na(df))
$
install.packages("tidyr")
knitr::opts_chunk$set(message = FALSE)
install.packages('tidyr')
#Importing the tidyverse library and dataset with read_csv.
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/adult_census_missing.csv')
head(df)
#Checking for missing values by column.
colSums(is.na(df))
$
$
knitr::opts_chunk$set(message = FALSE)
install.packages('tidyr')
#Importing the tidyverse library and dataset with read_csv.
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/adult_census_missing.csv')
head(df)
#Checking for missing values by column.
colSums(is.na(df))
$
install.packages("tidyr")
knitr::opts_chunk$set(message = FALSE)
install.packages('tidyr')
#Importing the tidyverse library and dataset with read_csv.
library(tidyverse)
df <- read_csv('https://bryantstats.github.io/math421/data/adult_census_missing.csv')
head(df)
#Checking for missing values by column.
colSums(is.na(df))
$
sum(is.na(df))
